"use strict";(self.webpackChunkbox_ui=self.webpackChunkbox_ui||[]).push([[88],{"./src/StoryLayout.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>StoryLayout});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const StoryLayout=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()({"dark bg-gray-900":args.darkMode},"-m-4"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(args.className,{"p-4":!args.noPadding}),children:args.children})});StoryLayout.__docgenInfo={description:"",methods:[],displayName:"StoryLayout",props:{darkMode:{required:!0,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"String"},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},noPadding:{required:!1,tsType:{name:"String"},description:""}}}},"./src/stories/ButtonGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IconButtonGroup:()=>IconButtonGroup,LabelButtonGroup:()=>LabelButtonGroup,LabelIconButtonGroup:()=>LabelIconButtonGroup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ButtonGroup_stories});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ButtonGroup=_ref=>{let{options,activeOption,setActiveOption}=_ref;return(0,jsx_runtime.jsx)("div",{children:options.map(((option,index)=>(0,jsx_runtime.jsx)("button",{className:classnames_default()("inline-flex whitespace-nowrap items-center h-10 px-4 font-medium text-center text-sm focus:outline-none hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-700 dark:text-white border border-gray-300 dark:border-gray-500",{"rounded-l-lg":0===index,"rounded-r-lg":index===options.length-1,"bg-gray-50 dark:bg-gray-700":activeOption===option.value,"border-r-0":0!==index&&index!==options.length-1}),onClick:()=>setActiveOption(option.value),children:option.content},option.value)))})};ButtonGroup.__docgenInfo={description:"",methods:[],displayName:"ButtonGroup",props:{options:{required:!0,tsType:{name:"Array",elements:[{name:"IButtonItem"}],raw:"IButtonItem[]"},description:""},activeOption:{required:!0,tsType:{name:"string"},description:""},setActiveOption:{required:!0,tsType:{name:"signature",type:"function",raw:"(activeOption: string) => void",signature:{arguments:[{type:{name:"string"},name:"activeOption"}],return:{name:"void"}}},description:""}}};var StoryLayout=__webpack_require__("./src/StoryLayout.tsx"),fi=__webpack_require__("./node_modules/react-icons/fi/index.mjs");const options1=[{value:"Leading",content:"Leading"},{value:"Middle",content:"Middle"},{value:"Trailing",content:"Trailing"}],options2=[{value:"first",content:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:(0,jsx_runtime.jsx)(fi.sxA,{size:20,className:"mr-2"})}),"First"]})},{value:"second",content:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:(0,jsx_runtime.jsx)(fi.sxA,{size:20,className:"mr-2"})}),"Second"]})},{value:"third",content:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:(0,jsx_runtime.jsx)(fi.sxA,{size:20,className:"mr-2"})}),"Third"]})}],options3=[{value:"list",content:(0,jsx_runtime.jsx)(fi.Wm,{size:20})},{value:"grid",content:(0,jsx_runtime.jsx)(fi.QPV,{size:20})}],ButtonGroup_stories={title:"Example/ButtonGroup",component:ButtonGroup,parameters:{layout:"centered"},tags:["autodocs"]},LabelButtonGroup={args:{darkMode:!1},render:args=>{const[activeItem1,setActiveItem1]=(0,react.useState)(options1[1].value);return(0,jsx_runtime.jsx)(StoryLayout.q,{...args,children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(ButtonGroup,{options:options1,activeOption:activeItem1,setActiveOption:setActiveItem1})})})}},IconButtonGroup={args:{darkMode:!1},render:args=>{const[activeView,setViewOption]=(0,react.useState)("list");return(0,jsx_runtime.jsx)(StoryLayout.q,{...args,children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(ButtonGroup,{options:options3,activeOption:activeView,setActiveOption:setViewOption})})})}},LabelIconButtonGroup={args:{darkMode:!1},render:args=>{const[activeItem2,setActiveItem2]=(0,react.useState)(options2[1].value);return(0,jsx_runtime.jsx)(StoryLayout.q,{...args,children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(ButtonGroup,{options:options2,activeOption:activeItem2,setActiveOption:setActiveItem2})})})}},__namedExportsOrder=["LabelButtonGroup","IconButtonGroup","LabelIconButtonGroup"];LabelButtonGroup.parameters={...LabelButtonGroup.parameters,docs:{...LabelButtonGroup.parameters?.docs,source:{originalSource:"{\n  args: {\n    darkMode: false\n  },\n  render: args => {\n    const [activeItem1, setActiveItem1] = useState<string>(options1[1].value);\n    return <StoryLayout {...args}>\n        <div>\n          <ButtonGroup options={options1} activeOption={activeItem1} setActiveOption={setActiveItem1} />\n        </div>\n      </StoryLayout>;\n  }\n}",...LabelButtonGroup.parameters?.docs?.source}}},IconButtonGroup.parameters={...IconButtonGroup.parameters,docs:{...IconButtonGroup.parameters?.docs,source:{originalSource:'{\n  args: {\n    darkMode: false\n  },\n  render: args => {\n    const [activeView, setViewOption] = useState<string>("list");\n    return <StoryLayout {...args}>\n        <div>\n          <ButtonGroup options={options3} activeOption={activeView} setActiveOption={setViewOption} />\n        </div>\n      </StoryLayout>;\n  }\n}',...IconButtonGroup.parameters?.docs?.source}}},LabelIconButtonGroup.parameters={...LabelIconButtonGroup.parameters,docs:{...LabelIconButtonGroup.parameters?.docs,source:{originalSource:"{\n  args: {\n    darkMode: false\n  },\n  render: args => {\n    const [activeItem2, setActiveItem2] = useState<string>(options2[1].value);\n    return <StoryLayout {...args}>\n        <div>\n          <ButtonGroup options={options2} activeOption={activeItem2} setActiveOption={setActiveItem2} />\n        </div>\n      </StoryLayout>;\n  }\n}",...LabelIconButtonGroup.parameters?.docs?.source}}}}}]);